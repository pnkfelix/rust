warning: the feature `unsized_locals` is incomplete and may cause the compiler to crash
  --> $DIR/double-move.rs:1:12
   |
LL | #![feature(unsized_locals, unsized_fn_params)]
   |            ^^^^^^^^^^^^^^
   |
   = note: `#[warn(incomplete_features)]` on by default

warning: the feature `unsized_fn_params` is incomplete and may cause the compiler to crash
  --> $DIR/double-move.rs:1:28
   |
LL | #![feature(unsized_locals, unsized_fn_params)]
   |                            ^^^^^^^^^^^^^^^^^

error[E0382]: use of moved value: `y`
  --> $DIR/double-move.rs:21:22
   |
LL |         let y = *x;
   |             - move occurs because `y` has type `str`, which does not implement the `Copy` trait
LL |         drop_unsized(y);
   |                      - value moved here
LL |         drop_unsized(y);
   |                      ^ value used here after move

error[E0382]: use of moved value: `x`
  --> $DIR/double-move.rs:27:22
   |
LL |         let _y = *x;
   |                  -- value moved here
LL |         drop_unsized(x);
   |                      ^ value used here after partial move
   |
   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait

error[E0382]: use of moved value: `*x`
  --> $DIR/double-move.rs:33:18
   |
LL |         let x = "hello".to_owned().into_boxed_str();
   |             - move occurs because `x` has type `std::boxed::Box<str>`, which does not implement the `Copy` trait
LL |         drop_unsized(x);
   |                      - value moved here
LL |         let _y = *x;
   |                  ^^ value used here after move

error[E0382]: use of moved value: `y`
  --> $DIR/double-move.rs:40:9
   |
LL |         let y = *x;
   |             - move occurs because `y` has type `str`, which does not implement the `Copy` trait
LL |         y.foo();
   |         - value moved here
LL |         y.foo();
   |         ^ value used here after move

error[E0382]: use of moved value: `x`
  --> $DIR/double-move.rs:46:9
   |
LL |         let _y = *x;
   |                  -- value moved here
LL |         x.foo();
   |         ^ value used here after partial move
   |
   = note: move occurs because `*x` has type `str`, which does not implement the `Copy` trait

error[E0382]: use of moved value: `*x`
  --> $DIR/double-move.rs:52:18
   |
LL |         let x = "hello".to_owned().into_boxed_str();
   |             - move occurs because `x` has type `std::boxed::Box<str>`, which does not implement the `Copy` trait
LL |         x.foo();
   |         - value moved here
LL |         let _y = *x;
   |                  ^^ value used here after move

error: aborting due to 6 previous errors; 2 warnings emitted

For more information about this error, try `rustc --explain E0382`.
